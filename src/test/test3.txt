// ＜有返回值函数定义＞  ::=  ＜声明头部＞‘(’＜参数＞‘)’ ‘{’＜复合语句＞‘}’
// ＜参数＞    ::= ＜参数表＞
// ＜参数表＞    ::=  ＜类型标识符＞＜标识符＞{,＜类型标识符＞＜标识符＞}| ＜空＞
int factorial(int x)
{   
	// ＜条件语句＞  ::=  if ‘(’＜条件＞‘)’＜语句＞
	if(x<=0) return (0);
	if(x==1) return (1);
	// ＜返回语句＞   ::=  return[‘(’＜表达式＞‘)’]      
	return (x*factorial(x-1));
}

void main()
{
	// ＜复合语句＞   ::=  ［＜常量说明＞］［＜变量说明＞］＜语句列＞
	int x,result;
	// ＜赋值语句＞   ::=  ＜标识符＞＝＜表达式＞
	x = 6;
	// ＜赋值语句＞   ::=  ＜标识符＞＝＜表达式＞|＜标识符＞‘[’＜表达式＞‘]’=＜表达式＞
	// ＜表达式＞    ::= ［＋｜－］＜项＞{＜加法运算符＞＜项＞}
	// ＜项＞     ::= ＜因子＞{＜乘法运算符＞＜因子＞}
	//＜因子＞    ::= ＜标识符＞｜＜标识符＞‘[’＜表达式＞‘]’｜＜整数＞|＜字符＞｜＜有返回值函数调用语句＞|‘(’＜表达式＞‘)’
	// ＜有返回值函数调用语句＞ ::= ＜标识符＞‘(’＜值参数表＞‘)’

	result = factorial(x);
	// ＜写语句＞    ::=  printf ‘(’＜表达式＞‘)’
	printf(result);
}
